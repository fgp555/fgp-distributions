"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const user_controller_1 = require("./user.controller");
const asyncHandler_1 = require("../../../utils/asyncHandler");
const auth_middleware_1 = require("../../../middleware/auth.middleware");
const router = (0, express_1.Router)();
const controller = new user_controller_1.UsersController();
const adminOnly = ["admin", "superadmin"];
const superAdminOnly = ["superadmin"];
const allRoles = ["user", "admin", "superadmin"];
router.get("/findAll", (0, asyncHandler_1.asyncHandler)(controller.findAll.bind(controller)));
router.get("/findOne/:id", (0, asyncHandler_1.asyncHandler)(controller.findOne.bind(controller)));
router.post("/create", (0, asyncHandler_1.asyncHandler)(controller.create.bind(controller)));
router.patch("/update/:id", (0, asyncHandler_1.asyncHandler)(controller.update.bind(controller)));
router.delete("/remove/:id", (0, asyncHandler_1.asyncHandler)(controller.remove.bind(controller)));
router.get("/adminOnly", (0, auth_middleware_1.requireRole)(superAdminOnly), (0, asyncHandler_1.asyncHandler)(controller.adminOnly.bind(controller)));
exports.default = router;
// router.get("/findAll", requireRole(adminOnly), asyncHandler(controller.findAll.bind(controller)));
// router.get("/findOne/:id", requireRole(allRoles), asyncHandler(controller.findOne.bind(controller)));
// router.post("/create", requireRole(superAdminOnly), asyncHandler(controller.create.bind(controller)));
// router.patch("/update/:id", requireRole(adminOnly), asyncHandler(controller.update.bind(controller)));
// router.delete("/remove/:id", requireRole(superAdminOnly), asyncHandler(controller.remove.bind(controller)));
// router.get("/", (req, res, next) => controller.getAll(req, res, next));
// router.get("/:id", (req, res, next) => controller.getOne(req, res, next));
// router.post("/", (req, res, next) => controller.create(req, res, next));
// router.put("/:id", (req, res, next) => controller.update(req, res, next));
// router.delete("/:id", (req, res, next) => controller.delete(req, res, next));
//# sourceMappingURL=user.routes.js.map